{"version":3,"sources":["context/loggedInState.js","component/pages/Landing.js","tools/request.js","component/pages/SignUp.js","component/pages/Login.jsx","component/layout/Dropdown.jsx","component/layout/NavBar.jsx","context/ToDoContext.jsx","context/AddTaskContext.jsx","component/Tasking/AddTask.jsx","component/Tasking/Task.jsx","component/Tasking/Tasks.jsx","component/Buckets/Bucket.jsx","component/layout/Popup.jsx","component/Buckets/Buckets.jsx","component/layout/Sort.jsx","component/pages/ToDo.jsx","component/Tables/TimeCell.jsx","component/Tables/TimeTable2.jsx","component/pages/TimeBlock.jsx","App.js","reportWebVitals.js","index.js"],"names":["loggedInCallback","token","Landing","className","loggedIn","login","t","console","log","logout","cookie","remove","getToken","getLoggedIn","get","url","a","fetch","domain","method","headers","Accept","authorization","res","json","post","data","body","JSON","stringify","SignUp","useState","email","setEmail","password","setPassword","check","setCheck","first","setFirst","last","setLast","passwordError","setPasswordError","redirect","setRedirect","checkEmail","setCheckEmail","to","htmlFor","type","name","id","placeholder","value","onChange","e","target","style","fontSize","color","onClick","preventDefault","includes","firstName","lastName","passCheck","then","resJson","LoginPage","error","setError","details","setDetails","autoToDo","setAutoToDo","onSubmit","userLogin","user","pass","Dropdown","props","mouseOver","setMouseOver","onMouseEnter","onMouseLeave","children","Option","clicked","NavBar","setTeam","setName","teams","setTeams","innerHTML","useEffect","map","team","toDoContext","createContext","updateToDoContext","CounterContext","React","CounterUpdateContext","useToDoContext","useContext","useUpdateToDoContext","useCounter","ToDoProvider","reloadBuckets","reloadTasks","currentBucket","currentTeam","toDo","setToDo","counter","setCounter","Provider","AddTaskContext","AddTaskUpdateContext","useAddTaskUpdate","AddTaskProvider","showAddTask","setShowAddTask","prevShowAddTask","AddTask","setReload","b","cancelEdit","edit","title","setTitle","setBody","toggleAddTask","undefined","cols","rows","Schedule","Task","task","hover","setHover","buckets","setBuckets","_id","setId","reminder","dueDate","setDueDate","calendar","setCalendar","isEditing","setIsEditing","completeTask","setCompleteTask","handleHover","input","onMouseOver","onMouseOut","track","newBody","char","concat","parseBody","bucket","index","Tasks","tasks","setTasks","setToDoContext","reload","length","i","checkBucketsSelected","Bucket","popup","selected","setSelected","text","setText","showEdit","onKeyDown","keyCode","currentBuckets","indexOf","splice","push","Popup","trigger","AddingBucket","add","cancel","keycode","marginTop","Buckets","setPopup","addingBucket","setBucketAdd","setTrigger","Sort","ToDo","counterUpdate","sort","setSort","teamName","location","pathname","substring","toggleSort","TimeCell","TimeTable2","timerows","timeLoop","TimeBlock","App","setLoggedIn","setLoggedInCallback","jwt","load","exact","path","component","render","routeProps","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b9b70db.chunk.js","sourcesContent":["import cookie from \"react-cookies\";\r\n\r\nvar loggedInCallback;\r\nvar token;\r\nvar loggedIn = false;\r\n\r\nfunction setLoggedInCallback(setLoggedIn) {\r\n    loggedInCallback = setLoggedIn;\r\n}\r\n\r\nfunction login(t) {\r\n    token = t;\r\n    loggedIn = true;\r\n    loggedInCallback(true);\r\n    console.log(\"state has been changed to true\")\r\n}\r\n\r\nfunction logout() {\r\n    loggedIn = false;\r\n    cookie.remove(\"jwt\");\r\n    loggedInCallback(false);\r\n}\r\n\r\nfunction getToken() {\r\n    return token;\r\n}\r\n\r\nfunction getLoggedIn() {\r\n    return loggedIn;\r\n}\r\n\r\nexport { setLoggedInCallback, login, logout, getToken, getLoggedIn }","\nconst Landing = () => {\n\n  // Method creation until they are moved to a Login state:\n\n\n\n\n  return (\n      <div className=\"welcome\">\n      <h2>Welcome to this todo application</h2>\n      <p>pretty stuff</p>\n      </div>\n    )\n\n}\n\nexport default Landing\n\n","import { domain } from \"../App\";\nimport { getToken } from '../context/loggedInState';\n\nasync function get(url) {\n    const token = getToken();\n    const res = await fetch(`${domain}${url}`, {\n                method: \"GET\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                  authorization: \"bearer \" + token,\n                }\n            })\n    return await res.json()\n}\n\nasync function post(url, data) {\n    const token = getToken();\n    const res = await fetch(`${domain}${url}`, {\n                method: \"POST\",\n                headers: {\n                  Accept: \"application/json\",\n                  \"Content-Type\": \"application/json\",\n                  authorization: \"bearer \" + token,\n                },\n                body: JSON.stringify(data)\n            })\n    return await res.json()\n}\n\nexport { get, post }","import React, {useState} from 'react';\nimport {post} from \"../../tools/request\";\nimport { login } from \"../../context/loggedInState\";\nimport { Redirect } from 'react-router';\n\nconst SignUp = () => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [check, setCheck] = useState('');\n    const [first, setFirst] = useState('');\n    const [last, setLast] = useState('');\n    const [passwordError, setPasswordError] = useState('');\n    const [redirect, setRedirect] = useState(false);\n    const [checkEmail, setCheckEmail] = useState('')\n\n    const handleFNameChange = e => {\n        setFirst(e.target.value)\n    }\n    const handleLNameChange = e => {\n        setLast(e.target.value)\n    }\n    const handleEmailChange = e => {\n        setEmail(e.target.value)\n    }\n\n    const handlePasswordChange = e => {\n        setPassword(e.target.value)\n    }\n    \n    const handleCheckPassword = e => {\n        if ( e.target.value !== password ) {\n            setPasswordError('The passwords do not match, please try again.')\n        } else {\n            setPasswordError('')\n            console.log('Passwords Match')\n        }\n        setCheck(e.target.value)\n    }\n\n    const validateEmail = () => {\n        if (email.includes(\"@\")) {\n            return true\n        } else {\n            setCheckEmail('invalid email')\n            return false\n        }\n    }\n\n    const submitSignUp = e => {\n        e.preventDefault();\n        \n        // Dylan explain why I can't just have this if statement use validateEmail, and I have to set it equal to something.\n        //const emailValid = validateEmail();\n        if (validateEmail() === true) {\n            console.log('No email errors')\n            setCheckEmail('');\n            setEmail('');\n        }\n        post(\"/api/user/createUser\", {\n            firstName: first,\n            lastName: last,\n            email,\n            password,\n            passCheck: check            \n        })\n        .then((resJson) => {\n            if (resJson.loggedIn === true) {\n                login(resJson.token);\n                setRedirect(true);\n            } else {\n                console.log(\"Error Creating User\");\n            }\n        });\n        \n    }\n    \n    if (redirect === true) {\n        return <Redirect to=\"/\" />\n    }\n\n    return (\n        <form>\n            <h1>Create Your Account</h1>\n            {(passwordError !=='') ? ((<div className='error'>{passwordError}</div>)) : ''}\n            <div>\n                <label htmlFor=\"fname\">First Name: </label>\n                <input type='text' name='fname' id='fname' placeholder='Your first name...' value={first}\n                onChange={ handleFNameChange }\n                ></input>\n            </div>\n            <div>\n                <label htmlFor=\"lname\">Last Name: </label>\n                <input type='text' name='lname' id='lname' placeholder='Your last name...' value={last}\n                onChange={ handleLNameChange }\n                ></input>\n            </div>\n            <div>\n                <label htmlFor=\"email\">Email: </label>\n                <input type='text' name='email' id='email' placeholder='Your Email...' value={email}\n                onChange={ handleEmailChange }\n                ></input>\n                <div style={{fontSize: 12, color: 'red'}}>{checkEmail}</div>\n            </div>\n            <div>\n                <label htmlFor=\"password\">Create Password: </label>\n                <input type='password' name='password' id='password' placeholder='Create Password...' value={password}\n                onChange={ handlePasswordChange }\n                ></input>\n            </div>\n            <div>\n                <label htmlFor=\"confirmpassword\">Confirm Password: </label>\n                <input type='password' name='confirmpassword' id='confirmpassword' placeholder='Confirm Password...' value={check}\n                onChange={ handleCheckPassword }\n                ></input>\n            </div>\n            <input type=\"submit\" onClick={submitSignUp}/>\n\n        </form>\n    )\n}\n\nexport default SignUp\n\n/*\n1. Need to create a way to store users name DONE\n2. Need to create a way to store users email DONE\n3. Need to create a way to store users password DONE\n4. Need to create a way to store users security question\n5. Add error handling\n6. Add a functon for handling submitting the form.\n*/","import React, { useState } from \"react\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport { login, logout } from \"../../context/loggedInState\";\nimport { post } from \"../../tools/request\";\n\nfunction LoginPage() {\n    const [error, setError] = useState(\"\");\n    const [details, setDetails] = useState({email:'', password:''});\n    const [autoToDo, setAutoToDo] = useState(false);\n\n\n    // Function to handle on submit of the login button:\n    const submitHandler = e => {\n        e.preventDefault();\n        userLogin(details, setError, setAutoToDo);\n    }\n  \n    if (autoToDo === true) {\n      return (\n        <Redirect to=\"/todo\" />\n      )\n    }\n\nreturn (\n  <div name='Main' className='main-login'>\n    <div className='login-title'>BLOCKZ by Aether Studios</div>\n    <div className='login-panel'>\n      <div className='login-element'>\n        {/* Placeholder for logo */}\n        Placeholder for logo\n      </div>\n      <div className='login-element'>\n        <form name='Login' onSubmit={submitHandler}>\n            <div className=\"form-inner\">\n                {(error !==\"\") ? ((<div className='error'>{error}</div>)) : \"\"}\n                <div className=\"form-element\">\n                    <label htmlFor=\"email\" className='login-label2'>USERNAME/EMAIL: </label>\n                    <input type=\"email\" name=\"email\" id=\"email\" className='login-input'\n                    // On change for event e, call setDetails pulling in what details already is + the value of the event (keystroke)\n                    // then set the value of the state email in details to ...details + the new keystroke.\n                    onChange={e => setDetails({...details, email: e.target.value})} value={details.email}/>\n                </div>\n                <div className=\"form-element\">\n                    <label htmlFor=\"password\" className='login-label2'>PASSWORD: </label>\n                    <input type=\"password\" name=\"password\" id='password' className='login-input'\n                    onChange={e => setDetails({...details, password: e.target.value})} value={details.password}/>\n                </div>\n                <div className='form-item'>\n                    <input className='btn-lg' type=\"submit\" value=\"LOGIN\"></input>\n                </div>\n                <Link className='btn-text' to=\"/signup\">Create Account</Link>\n            </div>\n        </form>\n      </div>\n    </div>\n  </div>\n\n)\n}\n\n  const userLogin = (details, setError, setAutoToDo) => {\n    \n    //Added by Dylan to authenticate from backend\n    post(\"/api/auth/login\", {\n      user: details.email,\n      pass: details.password\n    })\n    .then((resJson) => {\n      if (resJson.error === true) {\n        console.log(\"The login information didn't match...\");\n        setError(\"The login information didn't match...\");\n      } else if (resJson.loggedIn === true) {\n        console.log(\"logged in\");\n        login(resJson.token);\n        setAutoToDo(true);\n\n      }\n    })\n  }\n  const userLogout = () => {\n    logout();\n  }\n\n  export { LoginPage }","import React, { useState } from \"react\";\r\n\r\nexport function Dropdown(props) {\r\n    const [mouseOver, setMouseOver] = useState(false);\r\n\r\n    function onMouseEnter() {\r\n        setMouseOver(true);\r\n    }\r\n\r\n    function onMouseLeave() {\r\n        setMouseOver(false);\r\n    }\r\n\r\n  return (\r\n      <div onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\r\n          <div>\r\n            {props.first}\r\n          </div>\r\n          <div className=\"dropdown-content\">\r\n              {mouseOver ? props.children : null}\r\n          </div>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport function Option(props) {\r\n  return (\r\n      <div onClick={props.clicked} className=\"dropdown-content-items\">\r\n          {props.value}\r\n      </div>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { logout, getLoggedIn } from \"../../context/loggedInState\";\nimport { get } from \"../../tools/request\";\nimport { FaUser } from 'react-icons/fa';\nimport { Dropdown, Option } from \"./Dropdown\";\n\nfunction NavBar({setTeam}) {\n  const loggedIn = getLoggedIn();\n\n  const [name, setName] = useState(\"\");\n  const [teams, setTeams] = useState([]);\n\n  useEffect(() => {\n    console.log(`am i logged in ${loggedIn}`)\n    if (loggedIn) {\n      get(\"/api/user/getUser\")\n        .then((resJson) => {\n          setName(resJson.user.firstName);\n        })\n      get(\"/api/teams/getTeams\")\n      .then((res) => {\n        setTeams(res.teams);\n      })\n    }\n  }, [loggedIn]);\n\n  function clicked(e) {\n    setTeam(e.target.innerHTML);\n  }\n\n  if (loggedIn) {\n    return (\n      <div>\n        <div className='navbar-container'>\n          <Dropdown first={<Link to=\"/todo\" className='navbar-page'>ToDo</Link>}>\n              {\n                teams.map((team) => (\n                  <Option clicked={clicked} key={team.id} value={<Link to={`/todo/${team.id}`} className='navbar-page'>{team.name}</Link>} />\n                ))\n              }\n          </Dropdown>\n          <Link to=\"/capture\" className='navbar-page'>Capture</Link>\n          <Link to=\"/timeblock\" className='navbar-page'>TimeBlock</Link>\n          <div className='flex-spacer-4'></div>\n          <Link to='/account'><FaUser className=\"navbar-user-icon\"></FaUser></Link>\n          <span className='navbar-hello'>Hello, {name}</span>\n          <button onClick={logout} className=\"logout-btn\">Logout</button>\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <Link to=\"/login\">Login</Link>\n    </div>\n  )\n}\n\nexport default NavBar;","import React, { useContext, createContext, useState } from 'react'\n\nconst toDoContext = createContext();\nconst updateToDoContext = createContext();\nconst CounterContext = React.createContext();\nconst CounterUpdateContext = React.createContext();\n\n// Custom Hooks that give us easy access to these values:\nexport function useToDoContext() {\n    return useContext(toDoContext)\n}\nexport function useUpdateToDoContext() {\n    return useContext(updateToDoContext)\n}\nexport function useCounter() {\n    return useContext(CounterContext)\n}\nexport function useCounterUpdate() {\n    return useContext(CounterUpdateContext)\n}\n\n\n// Main Add Task Provider:\n// Creating our state\nexport function ToDoProvider({ children }) {\n    const [toDo, setToDo] = useState(\n        {\n            reloadBuckets : true,\n            reloadTasks: true,\n            currentBucket: [],\n            currentTeam: \"\"\n        })\n\n    const [counter, setCounter] = useState(0)\n\n    \n\n    // Passing both of these values down into our children.\n    return (\n        <toDoContext.Provider value={toDo}>\n            <updateToDoContext.Provider value={setToDo}> \n                <CounterContext.Provider value={counter}>\n                    <CounterUpdateContext.Provider value={setCounter}>\n                        {children}\n                    </CounterUpdateContext.Provider>\n                </CounterContext.Provider>\n            </updateToDoContext.Provider>\n        </toDoContext.Provider>\n    )\n}","import React, { useContext, createContext, useState } from 'react'\n\nconst AddTaskContext = createContext();\nconst AddTaskUpdateContext = createContext();\n\n\n// Custom Hooks that give us easy access to these values:\nexport function useAddTask() {\n    return useContext(AddTaskContext)\n}\nexport function useAddTaskUpdate() {\n    return useContext(AddTaskUpdateContext)\n}\n\n// Main Add Task Provider:\n// Creating our state\nexport function AddTaskProvider({ children }) {\n    const [showAddTask, setShowAddTask] = useState(false)\n// Updating our state\n    function toggleAddTask(e) {\n        e.preventDefault();\n        setShowAddTask(prevShowAddTask => !prevShowAddTask);\n    }\n\n    // Passing both of these values down into our children.\n    return (\n        <AddTaskContext.Provider value={showAddTask}>\n            <AddTaskUpdateContext.Provider value={toggleAddTask}> \n                {children}\n            </AddTaskUpdateContext.Provider>\n        </AddTaskContext.Provider>\n    )\n}","import React, { useState } from \"react\";\nimport { useAddTaskUpdate } from \"../../context/AddTaskContext\";\nimport { post } from \"../../tools/request\";\nimport {\n  useToDoContext,\n  useUpdateToDoContext,\n} from \"../../context/ToDoContext\";\n\nconst AddTask = ({ setReload, t, b, cancelEdit, edit }) => {\n  const [title, setTitle] = useState(t);\n  const [body, setBody] = useState(b);\n\n  // Using custom hooks from AddTaskContext to update context and state.\n  const toggleAddTask = useAddTaskUpdate();\n  const toDoContext = useToDoContext();\n  const updateToDoContext = useUpdateToDoContext();\n\n  function submitTask(e) {\n\n    if (edit !== undefined) {\n      cancelEdit();\n      edit(title, body);\n      return;\n    }\n\n    toggleAddTask(e);\n    post(\"/api/task/createTask\", { title, body }).then((resJson) => {\n      if (resJson.error === true) {\n        console.log(\"Error submiting new task\");\n      } else {\n        setTitle(\"\");\n        setBody(\"\");\n        setReload(true);\n        updateToDoContext({ ...toDoContext, reloadBuckets: true });\n      }\n    });\n  }\n\n  function cancel(e) {\n    setTitle(\"\");\n    setBody(\"\");\n    if (cancelEdit === null) {\n      toggleAddTask(e);\n    } else {\n      cancelEdit();\n    }\n  }\n\n\n  function handleBody() {\n\n    let track = false;\n    var newBody = '';\n    for (const char in body) {\n        if (body[char] === \"#\") {\n            track = true;\n            continue\n        }\n        if (body[char] !== \"#\") {\n            track = false;\n            continue\n        }\n        if (!track) {\n            newBody = newBody.concat(body[char]);\n        }\n    }\n    return newBody;\n}\n\n\n  return (\n    <div className=\"task-editor-area\">\n      <div>\n        <form className=\"add-task-form\" onSubmit={submitTask}>\n          <div className=\"textarea-container1\">\n            <textarea\n              onChange={(e) => setTitle(e.target.value)}\n              name=\"taskTitle\"\n              id=\"taskTitle\"\n              cols=\"85\"\n              rows=\"1\"\n              className=\"task-area1\"\n              placeholder=\"Task Title...\"\n              value={title}\n            ></textarea>\n            <textarea\n              onChange={(e) => setBody(e.target.value)}\n              name=\"taskDetails\"\n              id=\"\"\n              cols=\"85\"\n              rows=\"5\"\n              className=\"task-area2\"\n              placeholder=\"Task Details...\"\n              value={body}\n            ></textarea>\n            {/* \n            USE THIS ONE once you ask Dylan why its not working on submit.\n            <div\n              contentEditable={true}\n              onChange={(e) => setBody(e.target.value)}\n              name=\"taskDetails\"\n              id=\"textarea\"\n              cols=\"85\"\n              rows=\"6\"\n              className=\"task-area2\"\n            >{body}</div> */}\n          </div>\n          <div className=\"textarea-container-submit\">\n            <button name='Submit'>{edit === undefined ? \"Add\" : \"Edit\"}</button>\n            <button type=\"button\" onClick={cancel}>\n              Cancel\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default AddTask;\n\n/* Notes:\n\nThis needs to get refactored from a textarea into a styled div that I can then seperate into two different text edit\nareas. One that is the title of the task and the second that is the details of the task.\nNeed to then work on getting that into the backend.\nI would like to implement some sort of keyword with \"#\" system so like #Monday would add the task to next Monday's list.\n\n*/\n","import React from 'react'\nimport { FaSun, FaTimes, FaEdit, FaCalendar, FaCheckCircle, FaRegCircle, FaRegCheckCircle, FaCheckSquare, FaRegSquare } from 'react-icons/fa'\nimport { useState, useEffect } from 'react'\nimport { post } from \"../../tools/request\";\nimport { useToDoContext, useUpdateToDoContext } from '../../context/ToDoContext';\nimport AddTask from './AddTask';\n\nconst Schedule = () => {\n    return (\n        <div className='test'>test</div>\n    )\n}\n\nconst Task = ({ task, setReload }) => {\n    const [title, setTitle] = useState(task.title)\n    const [hover, setHover] = useState(false)\n    const [buckets, setBuckets] = useState([])\n    const [body, setBody] = useState(task.body)\n    const [id, setId] = useState(task._id);\n    const [reminder, setReminder] = useState(task.reminder)\n    const [dueDate, setDueDate] = useState(task.dueDate)\n    const [calendar, setCalendar] = useState(false);\n    const [isEditing, setIsEditing] = useState(false);\n    const [completeTask, setCompleteTask] = useState(false)\n    const toDoContext = useToDoContext();\n    const updateToDoContext = useUpdateToDoContext();\n\n    useEffect(() => {\n        post(\"/api/buckets/getTaskBuckets\", {\"_id\": task._id})\n        .then((res) => {\n            setBuckets(res.buckets);\n        })\n        setId(task._id);\n        setTitle(task.title);\n        setBody(task.body);\n    }, [task])\n\n\n    function editTask(t, b) {\n        post(\"/api/task/editTask\", {\n            \"id\": id,\n            title: t,\n            body: b\n        })\n            .then((resJson) => {\n                if (resJson.error === true) {\n                    console.log(\"Error submiting new task\");\n                } else {\n                    updateToDoContext({...toDoContext, reloadBuckets: true, reloadTasks: true})\n                    setReload(true);\n                }\n            })\n    }\n\n    function deleteTask() {\n        post(\"/api/task/deleteTask\", { \"id\": id, })\n            .then((resJson) => {\n                if (resJson.error === true) {\n                    console.log(\"Error submiting new task\");\n                }\n                setReload(true);\n            })\n    }\n\n    function onBucket(e) {\n        setBuckets(e.target.value)\n    }\n    function onTitle(e) {\n        setTitle(e.target.value)\n    }\n\n    function onBody(e) {\n        setBody(e.target.value);\n    }\n\n    function onReminder(e) {\n        setReminder(e.target.value);\n    }\n\n    function moveTomorrow() {\n        setDueDate(dueDate + 1);\n    }\n    function parseBody() {\n        let track = false;\n        var newBody = '';\n        for (const char in body) {\n            if (body[char] === \"#\") {\n                track = true;\n                continue\n            }\n            if (body[char] === \" \" && track === true) {\n                track = false;\n                continue\n            }\n            if (!track) {\n                newBody = newBody.concat(body[char]);\n            }\n        }\n        return newBody;\n    }\n\n    function toggleCalendar(e) {\n        setCalendar(!calendar);\n    }\n    \n    function handleHover(input) {\n        setHover(input)\n    }\n\n    if (isEditing) {\n\n        return (<AddTask setReload={setReload} t={title} b={body} cancelEdit={() => {setIsEditing(false); handleHover(false)}} edit={editTask}/>)\n\n    } else {\n        \n    return (\n        <div className='task-item'             \n        onMouseOver={() => handleHover(true)} \n        onMouseOut={() => handleHover(false)}>\n            <div className='task-header'>\n                <FaRegSquare onClick={ () => {setCompleteTask(!completeTask)}} className={completeTask ? 'invisible':'visible task-complete'}/>\n                <FaCheckSquare onClick={ () => {setCompleteTask(!completeTask)}} className={completeTask ? 'visible task-complete':'invisible'}/>\n                <div className='task-element task-title font-header'>{title}</div>\n                <div className={`'task-icons' ${hover ? 'task-icons-hover' : ' invisible-icons'}`}>\n                    <FaSun className='task-icon' onClick={moveTomorrow} />\n                    {/* Placeholder for \"Move to tomorrow\" icon */}\n                    <FaCalendar className='task-delete task-icon' onClick={toggleCalendar}/>\n                    <FaEdit className='task-edit task-icon' onClick={() => setIsEditing(true)} />\n                    <FaTimes className='task-delete task-icon' onClick={deleteTask} />\n                </div>\n            </div>\n            <div className='task-body font-body'>\n                <p name='taskdetails' className='task-element task-details'>{parseBody()}</p>\n                <div className='task-buckets'>\n                    {buckets.map((bucket, index) => (\n                            <span className='task-bucket task-element'key={index}>#{bucket}</span>\n                        ))}\n                </div>\n            </div>\n            <span>   \n                {dueDate}\n            </span>\n            {calendar ? <Schedule/> : null}\n        </div>\n    )}\n}\nexport default Task\n\n\n/*\nNotes:\nThis will be the area where I add features to the a given task's template.\nThis will edit the format of all Tasks that will be mapped in Tasks.jsx file.a\n\n*/","import Task from './Task'\nimport React, { useEffect, useState } from 'react'\nimport { Redirect } from 'react-router';\nimport { getLoggedIn } from '../../context/loggedInState';\nimport { get, post } from \"../../tools/request\";\nimport AddTask from '../Tasking/AddTask';\nimport { useAddTask, useAddTaskUpdate } from '../../context/AddTaskContext'\nimport { FaAngleRight, FaAngleDoubleRight } from 'react-icons/fa';\nimport { useToDoContext, useUpdateToDoContext } from '../../context/ToDoContext';\n\n\n\nconst Tasks = () => {\n    const [tasks, setTasks] = useState([])\n    const [hover, setHover] = useState(false);\n    const loggedIn = getLoggedIn()\n    const showAddTask = useAddTask();\n    const toggleAddTask = useAddTaskUpdate();\n    const toDoContext = useToDoContext();\n    const setToDoContext = useUpdateToDoContext();\n\n    useEffect(() => {\n        // Fetch task items\n        if (loggedIn === true && toDoContext.reloadTasks === true) {\n            if (toDoContext.currentTeam === \"\") {\n                get(\"/api/task/getTasks\")\n                    .then((resJson) => {\n                        if (resJson.tasks !== undefined) {\n                            setTasks(resJson.tasks);\n                            setToDoContext({...toDoContext, reloadTasks: false})\n                        }\n                    })\n            } else {\n                post(\"/api/task/getTeamTasks\", {team: toDoContext.currentTeam})\n                    .then((resJson) => {\n                        if (resJson.tasks !== undefined) {\n                            setTasks(resJson.tasks);\n                            setToDoContext({...toDoContext, reloadTasks: false})\n                        }\n                    })\n            }\n        } else {\n            return (\n                <Redirect to=\"/login\" />\n            )\n        }\n    }, [toDoContext, tasks, loggedIn])\n\n\n\n    const handleHover = () => {\n        setHover(!hover)\n    }\n\n    function checkBucketsSelected(buckets) {\n        for (var i = 0; i < buckets.length; i++) {\n            if (toDoContext.currentBucket.includes(buckets[i])) return true;\n        }\n        return false;\n    }\n\n    function setReload(reload) {\n        setToDoContext({...toDoContext, reloadTasks: reload})\n    }\n\n    return (\n        <div>\n            <div name='addTaskCtn' className={showAddTask ? 'invisible add-task-container' : 'visible add-task-container'}\n                onMouseEnter={handleHover}\n                onMouseLeave={handleHover}>\n                <FaAngleRight name='angleRight' className={hover ? 'invisible add-task-angle' : 'add-task-angle'} />\n                <FaAngleDoubleRight name='angleRightDouble' className={hover ? 'add-task-angle hover' : 'invisible add-task-angle'} />\n                <button name='addTask' onClick={toggleAddTask}\n                    className={hover ? 'add-task-btn hover' : 'add-task-btn'}\n                >Add Task</button>\n            </div>\n            <div name='AddTaskForm' className={showAddTask ? 'visible' : 'invisible'}>\n                <AddTask setReload={setReload} t={''} b={''} cancelEdit={null} />\n            </div>\n            <div name='taskList' className='task-list'>\n                {tasks.map((task) => {\n                    if (toDoContext.currentBucket.length === 0 || checkBucketsSelected(task.buckets)) {\n                        return <Task key={task._id} task={task} setReload={setReload} />\n                    }\n                    return null;\n                })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Tasks;\n","import React, { useEffect, useState } from \"react\";\nimport { FaPlus, FaTimes, FaEdit, FaBars, FaDiceD6 } from 'react-icons/fa';\nimport { get, post } from \"../../tools/request\";\nimport {\n  useToDoContext,\n  useUpdateToDoContext,\n} from \"../../context/ToDoContext\";\n\nconst Bucket = ({ bucket, popup }) => {\n  const [selected, setSelected] = useState(false);\n  const [text, setText] = useState(bucket.name);\n  const [isEditing, setIsEditing] = useState(false);\n  const [_id, setId] = useState(bucket._id);\n  const toDoContext = useToDoContext();\n  const updateToDoContext = useUpdateToDoContext();\n\n  useEffect(() => {\n    setText(bucket.name);\n  }, [bucket])\n\n  const setCurrentBucket = () => {\n    if (selected) {\n      setSelected(false);\n      var currentBuckets = toDoContext.currentBucket;\n      const index = currentBuckets.indexOf(bucket._id);\n      if (index > -1) {\n        currentBuckets.splice(index, 1);\n      }\n      updateToDoContext({ ...toDoContext, currentBucket: currentBuckets });\n    } else {\n      setSelected(true);\n      let currentBuckets = toDoContext.currentBucket;\n      currentBuckets.push(bucket._id)\n      updateToDoContext({ ...toDoContext, currentBucket: currentBuckets });\n    }\n  };\n\n  function showEdit(index) {\n    setIsEditing(!isEditing)\n    console.log(\"Show editing \" + isEditing)\n  }\n\n\n  function deleteBucket() {\n    console.log('Delete Buckets')\n    post(\"/api/buckets/deleteBucket\", { \"bucket\": _id, })\n      .then((resJson) => {\n        if (resJson.error === true) {\n          console.log(\"Error\");\n        }\n        updateToDoContext({ ...toDoContext, reloadBuckets: true });\n      })\n  }\n\n  function editBucket(e) {\n    console.log(e.keyCode);\n    if (e.keyCode === 13 && isEditing) {\n      post(\"/api/buckets/editBucket\", { \"_id\": _id, \"name\": text })\n        .then((resJson) => {\n          if (resJson.error === false) {\n            console.log(\"Edit Buckets\");\n          } else {\n            console.log(\"error editing bucket\");\n          }\n          showEdit()\n          updateToDoContext({ ...toDoContext, reloadBuckets: true });\n        })\n    }\n  }\n\n\n  return (\n    <div>\n      {popup ? (\n        <div className='bucket-element-pop'>\n          <input type=\"text\" className={isEditing ? \"visible bucket-item-edit\" : \"invisible\"} value={text}\n            onChange={e => setText(e.target.value)}\n            onKeyDown={editBucket}\n          />\n          <div className={isEditing ? 'invisible' : 'bucket-item-pop'}>\n            {text}\n          </div>\n          <div className='bucket-icons-pop'>\n            <FaEdit className='highlight' onClick={showEdit} />\n            <FaTimes className='highlight' onClick={deleteBucket} />\n          </div>\n        </div>\n      ) : <div onClick={setCurrentBucket} className={selected ? 'bucket-item selected' : 'bucket-item'}>\n        <FaDiceD6 /> {/* Placeholder until we get custom icons */}\n        {text}\n      </div>}\n    </div>\n  );\n\n}\nexport default Bucket;\n","import React from 'react'\n\nconst Popup = (props) => {\n    return (props.trigger) ? (\n        <div className='popup'>\n            <div className='popup-inner'>\n                {props.children}\n                {/* <button className='popup-close btn-sm' onClick={()=> props.setTrigger(false)}>Close</button> */}\n            </div>\n        </div>\n    ) : '';\n}\n\nexport default Popup\n","import React, {useState, useEffect} from 'react'\nimport {FaBars} from 'react-icons/fa';\nimport Bucket from './Bucket';\nimport {get, post} from \"../../tools/request\";\nimport { useToDoContext, useUpdateToDoContext } from '../../context/ToDoContext';\nimport Popup from '../layout/Popup';\n\nconst Buckets = () => {\n    const [buckets, setBuckets] = useState([]);\n    const [popup, setPopup] = useState(false);\n    const [addingBucket, setBucketAdd] = useState(false);\n    const toDoContext = useToDoContext();\n    const setToDoContext = useUpdateToDoContext();\n\n    useEffect(() => {\n        // Fetch todos\n        if (toDoContext.reloadBuckets === true) {\n            if (toDoContext.currentTeam === \"\") {\n                    // let tempBuckets = [];\n                    post(\"/api/buckets/getBuckets\", {})\n                    .then((res) => {\n                        // for (const bucket of res.buckets) {\n                        //     tempBuckets.push(bucket.name);\n                        // }\n                        setBuckets(res.buckets);\n                    })\n\n                \n            } else {\n                post(\"/api/teams/getTeam\", {team: toDoContext.currentTeam})\n                .then((res) => {\n                    setBuckets(res.team.buckets);\n                })\n            }\n            console.log(\"Setting reloadBuckets to false\")\n            setToDoContext({...toDoContext, reloadBuckets: false});\n        }\n    }, [toDoContext])\n    \n    function addBucket(text) {\n        post(\"/api/bucket/addBucket\", {\"name\": text, 'team': toDoContext.team})\n        .then((resJson) => {\n            if (resJson.error === true) {\n                console.log(\"Add Buckets\");\n            }\n            setToDoContext({...toDoContext, reloadBuckets: true});\n        })\n    }\n    \n    return (\n        <div className='buckets'>\n            <div className='buckets-title'>\n                <header className='buckets-header'>Buckets</header>\n                <span className='flex-spacer-4'></span>\n                <FaBars className='buckets-add' onClick={() => setPopup(true)} />\n            </div>\n            <ul className='bucket-list'>\n                {buckets.map((bucket, index) => (\n                    <Bucket key={bucket._id} bucket={bucket} className='bucket-item' popup={false} />\n                ))}\n            </ul>\n            <Popup trigger={popup} setTrigger={setPopup}>\n                <h4 className='item-center'>Bucket List</h4>\n                <div className='bucket-list-sizing'>\n                {addingBucket ? <AddingBucket add={addBucket} cancel={setBucketAdd}/>: null}\n                    <ul className='bucket-list-pop'>\n                        <div className='bucket-elements-pop'>\n                        {buckets.map((bucket, index) => {\n                        return <Bucket key={index} bucket={bucket} popup={true} />\n                        })}\n                        </div>\n                    </ul>\n                </div>\n                <div className='item-center'>\n                    <button className='btn-sm' onClick={() => setBucketAdd(true)}>Add</button>\n                    <button className='btn-sm' onClick={()=> setPopup(false)}>Close</button>\n                </div>\n\n            </Popup>\n        </div>\n    )\n}\n\nconst AddingBucket = ({add, cancel}) => {\n    const [text, setText] = useState(\"\");\n    let style = {\n        marginTop: 'auto'\n    }\n\n    function editBucket(e) {\n        if (e.keycode === 13) {\n              add(text);\n            }\n        }\n    \n    return (\n        <div className='bucket-add-pop'>\n            <input type=\"text\" className={\"visible bucket-item-edit\"} value={text}\n            onChange={e => setText(e.target.value)}\n            onKeyDown={editBucket}\n            />\n            <button className='btn-text' style={style} onClick={() => cancel(false)}>Cancel</button>\n        </div>\n\n    )\n}\n\nexport default Buckets\n","import React, {useState, useEffect} from 'react'\n// Importing custom hooks from our context components for use in this function comp.\nimport { useCounter, useCounterUpdate } from \"../../context/ToDoContext\";\n\nconst Sort = () => {\n    const counter = useCounter();\n    \n    if (counter == 1) {\n        return (<div>(FIFO)</div>)\n        \n    }\n    if (counter == 2) {\n        return (<div>(LIFO)</div>)\n        \n    } \n    if (counter == 3) {\n        return (<div>(Alphabetical)</div>)\n    }\n    else {\n        return (\n            <div>\n                (Default)\n                {/* This will eventually be replaced by nothing..represeting default or no-filter. */}\n            </div>\n        )\n    }\n\n}\n\nexport default Sort\n\n// 10/16/21: onMouseEnter to show the extra text, onClick to get the counter incremented.\n// might need to implement this in ToDo.jsx\n// Need to figure out how to reset a counter in jsx. Look on the internet for that one...\n\n// 10/14/21: I think this was addressed.\n// For the Sort component I would like to do a multi-click logic. So on first click it sorts the list by FIFO,\n// on the second click it sorts the list by LIFO, on the third click it alphabetical, on fourth click it goes back\n// to default (likely LIFO)\n\n// A strech goal would be to only show the title of the kind of sorting that is being done while the item is clicked\n// and hovered over. Right now I think a good workign goal is to highlight and\n\n// To make the count work I think I need to be passing a prop or state from the parent element of this component and\n// then within this component I need to extract that prop and use it for the new state that I have defined here...\n// let me know if you think that is right.","import React, { useEffect, useState, useContext } from \"react\";\nimport { Redirect } from \"react-router\";\nimport Tasks from \"../Tasking/Tasks\";\nimport Buckets from \"../Buckets/Buckets\";\nimport Sort from \"../layout/Sort\";\nimport { FaPlus, FaSort } from 'react-icons/fa';\n\n// Importing custom hooks from our context components for use in this function comp.\nimport { useCounter, useCounterUpdate } from \"../../context/ToDoContext\";\nimport { useToDoContext, useUpdateToDoContext } from \"../../context/ToDoContext\";\nimport { getLoggedIn } from \"../../context/loggedInState\";\nimport { useAddTask, useAddTaskUpdate } from '../../context/AddTaskContext'\n\n\nconst ToDo = (props) => {\n  const toDoContext = useToDoContext();\n  const setToDoContext = useUpdateToDoContext();\n  const counter = useCounter();\n  const counterUpdate = useCounterUpdate();\n  const toggleAddTask = useAddTaskUpdate();\n  const [reset, setReset] = useState(false)\n  const [sort, setSort] = useState(false);\n\n  useEffect( () => {\n    if(counter > 3) {\n      counterUpdate(0)\n    } else {\n      console.log(counter)\n    }\n  }, [counter])\n\n\n\n  useEffect(() => {\n    var teamName = props.location.pathname.substring(5, props.location.pathname.length);\n    if (teamName.length > 0) {\n      teamName = teamName.substring(1, teamName.length);\n    }\n    setToDoContext({...toDoContext, reloadBuckets: true, reloadTasks: true, currentTeam: teamName});\n  }, [props.location.pathname])\n\n  if (getLoggedIn() === false) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  function toggleSort() {\n    setSort(!sort)\n    // counterUpdate()\n  }\n  function counterAdd(){\n    counterUpdate(counter + 1)\n  }\n\n  return (\n      <div className=\"page-config\">\n        <div className=\"left-sidebar\">\n          <div name=\"viewContainer\">\n            <div className=\"left-sb-logo\">Views</div>\n            <ul name=\"views\" className=\"left-sb-navigation\">\n              <li name=\"dayView\" className={\"left-sb-element\"}>\n                {\" \"}\n                Day{\" \"}\n              </li>\n              <li name=\"weekView\" className={\"left-sb-element\"}>\n                {\" \"}\n                Week{\" \"}\n              </li>\n              <li name=\"timeblockView\" className={\"left-sb-element\"}>\n                {\" \"}\n                TimeBlock{\" \"}\n              </li>\n            </ul>\n          </div>\n          <div className=\"bucket-container\" name=\"bucketContainer\">\n            <Buckets/>\n          </div>\n        </div>\n        <div className=\"main\" id=\"main\">\n          <div className='menu-container'>\n            <div className='menu-element'>Bucket Name Here</div>\n            <div className='menu-element'>\n              <FaPlus className='menu-item'/>\n              <div className='menu-item' onClick={toggleAddTask}>New Task</div>\n            </div>\n            <div className='flex-spacer-end'></div>\n              <div className='menu-element menu-sort' onClick={counterAdd}\n              onMouseOver={toggleSort}\n              onMouseOut={toggleSort}\n              >\n                <FaSort className='menu-item'/>\n                <div className='menu-item'>Sort</div>\n                <div className={sort ? 'visible':'invisible'}><Sort/></div>\n              </div>\n          </div>\n          <div className=\"task-textedit\">\n            <Tasks className=\"tasks\" />\n          </div>\n        </div>\n      </div>\n  );\n};\n\nexport default ToDo;\n","import React from 'react'\n\nconst TimeCell = () => {\n    return (\n        <div className='table-col'>\n            <div className='table-row'>5:30</div>             \n        </div>\n    )\n}\n\nexport default TimeCell\n","import React, {useState} from 'react'\nimport Cell from './Cell';\nimport TimeCell from './TimeCell'; // Don't know if need a different type of cell component for the Admin col, but its late and I didnt want to think.\n\n\n\n\nconst TimeTable2 = () => {\n    // const [divisions, setDivisions] = useState(0)\n    var timerows = [];\n\n    function timeLoop() {\n        for(var i = 0; i < 39; i++) {\n            timerows.push(< TimeCell key={i} />)\n        }\n        return <div>{timerows}</div>\n    }\n\n    // function cellLoop() {\n    //     for()\n    // }\n\n    return (\n        <div className='table'>\n            <div className='table-col' id='admin' name='admin'>\n                Admin\n                {timeLoop()}\n            </div>\n            <div className='table-col' id='sunday'>\n                Sunday\n                {/* {cellLoop()} */}\n            </div>\n            <div className='table-col' id='monday'>\n                Monday\n            </div>\n            <div className='table-col' id='tuesday'>\n                Tuesday\n            </div>\n            <div className='table-col' id='wednesday'>\n                Wednesday\n            </div>\n            <div className='table-col' id='thursday'>\n                Thursday\n            </div>\n            <div className='table-col' id='friday'>\n                Friday\n            </div>\n            <div className='table-col' id='saturday'>\n                Saturday\n            </div>\n        </div>\n    )\n}\n\nexport default TimeTable2\n\n// Need to make a cell react component that can be the output of a for loop when iterated over.\n// The for loop logic needs to ask whether this space needs to be populated by a cell or if it need to be filled with a task.\n// We need to have the option toggle how many divisions there are and this would be changed by the user defined number of incremetns that they want.\n\n// Stack Overflow reference:\n// https://stackoverflow.com/questions/22876978/loop-inside-react-jsx\n","import React from 'react'\nimport TimeTable2 from '../Tables/TimeTable2'\n\nconst TimeBlock = () => {\n    return (\n        <div>\n            <TimeTable2 />\n        </div>\n    )\n}\n\nexport default TimeBlock\n","import React, {useState} from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, } from 'react-router-dom';\r\nimport './App.css';\r\nimport Landing from './component/pages/Landing';\r\nimport SignUp from './component/pages/SignUp';\r\nimport { login, setLoggedInCallback} from './context/loggedInState';\r\nimport cookie from 'react-cookies';\r\nimport { LoginPage } from './component/pages/Login';\r\nimport NavBar from './component/layout/NavBar';\r\nimport ToDo from './component/pages/ToDo';\r\nimport { AddTaskProvider } from './context/AddTaskContext';\r\nimport {get} from \"./tools/request\";\r\nimport { ToDoProvider } from './context/ToDoContext';\r\nimport TimeBlock from './component/pages/TimeBlock';\r\n\r\nconst domain = \"\"\r\n\r\nfunction App() {\r\n  \r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [team, setTeam] = useState(\"\");\r\n\r\n  setLoggedInCallback(setLoggedIn);\r\n\r\n  var jwt = cookie.load(\"jwt\")\r\n  if (typeof jwt !== \"undefined\") {\r\n    if (jwt !== \"\") {\r\n      get(\"/api/auth/checkLogin\")\r\n      .then((res) => {\r\n          if (res.loggedIn === true) {\r\n            login(jwt);\r\n          } else {\r\n            console.log(\"jwt is invalid\");\r\n          }\r\n      })\r\n    }\r\n  }\r\n  return (\r\n    <Router>\r\n      <AddTaskProvider>\r\n      <div className=\"App\">\r\n        <NavBar setTeam={setTeam}/>\r\n        <Switch>\r\n          <Route exact path='/' component={ Landing } />\r\n          <Route exact path='/login' component={ LoginPage } />\r\n          <Route exact path='/signup' component={ SignUp }></Route>\r\n          <Route path='/todo' render={ routeProps => (\r\n            <ToDoProvider>\r\n                <ToDo {...routeProps}/>\r\n            </ToDoProvider>\r\n            )}>\r\n          </Route>\r\n          <Route exact path='/timeblock' component={ TimeBlock }></Route>\r\n        </Switch>\r\n      </div>\r\n      </AddTaskProvider>\r\n    </Router>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\nexport { domain, };\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}